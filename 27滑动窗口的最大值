import java.util.ArrayList;
import java.util.LinkedList;
public class Solution {
    public ArrayList<Integer> maxInWindows(int [] num, int size)
    {
        ArrayList<Integer> res = new ArrayList<Integer>();
        if (num == null || size < 1 || num.length < size) {
            return res;
        }
        LinkedList<Integer> qmax = new LinkedList<Integer>();
        
        int index = 0;
        for (int i = 0; i < num.length; i++) {
            while (!qmax.isEmpty() && num[qmax.peekLast()] <= num[i]) {
                qmax.pollLast();
            }
            qmax.addLast(i);
            if (qmax.peekFirst() == i-size) {
                qmax.pollFirst();//过期了，滑动窗口已经过了那个下标的范围
            }
            if (i >= size-1) {
                res.add(num[qmax.peekFirst()]);//双端队列的头部始终保持着最大值
            }
        }
        return res;
    }
}
